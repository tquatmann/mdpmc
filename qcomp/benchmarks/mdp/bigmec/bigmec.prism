mdp

const int N;
global state: [0..4] init 0;


module player1
	i: [0..N] init 0;

	//go back
	[a11] state=1 & i=0 -> (state'=0);
	[a11] state=1 & i>0 -> (i'=i-1);
	[a11] state=2 & i=0 -> (state'=0);
	[a11] state=2 & i>0 -> (i'=i-1);

	//go forward
	[a12] state=1 & i<N-1 -> (i'=i+1);
	[a12] state=2 & i<N-1 -> (i'=i+1);

    //player 2 now part of player 1 module to make it an MDP
	[a21] state=0 -> (state'=1);
	[a22] state=0 -> (state'=2);
	[] state=4 -> (state'=4);

	//try to win
	[a12] state=1 & i=N-1 -> 1/2 : (state'=3) + 1/2 : (state'=4);
	[a12] state=2 & i=N-1 -> 2/5 : (state'=3) + 3/5 : (state'=4);

	[] state=3 -> (state'=3);

endmodule

//Labels
formula done = state=3 | state=4;
label "done" = done;
label "p1win" = done & state=3;
label "p2win" = done & state=4;
